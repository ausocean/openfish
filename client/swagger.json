{
    "components": {"schemas":{"api.Failure":{"properties":{"message":{"example":"error message here","type":"string"}},"type":"object"},"api.Result-handlers_CaptureSourceResult":{"properties":{"limit":{"example":20,"type":"integer"},"offset":{"example":0,"type":"integer"},"results":{"items":{"$ref":"#/components/schemas/handlers.CaptureSourceResult"},"type":"array","uniqueItems":false},"total":{"example":1,"type":"integer"}},"type":"object"},"api.Result-handlers_VideoStreamResult":{"properties":{"limit":{"example":20,"type":"integer"},"offset":{"example":0,"type":"integer"},"results":{"items":{"$ref":"#/components/schemas/handlers.VideoStreamResult"},"type":"array","uniqueItems":false},"total":{"example":1,"type":"integer"}},"type":"object"},"api.Result-services_AnnotationWithJoins":{"properties":{"limit":{"example":20,"type":"integer"},"offset":{"example":0,"type":"integer"},"results":{"items":{"$ref":"#/components/schemas/services.AnnotationWithJoins"},"type":"array","uniqueItems":false},"total":{"example":1,"type":"integer"}},"type":"object"},"api.Result-services_User":{"properties":{"limit":{"example":20,"type":"integer"},"offset":{"example":0,"type":"integer"},"results":{"items":{"$ref":"#/components/schemas/services.User"},"type":"array","uniqueItems":false},"total":{"example":1,"type":"integer"}},"type":"object"},"entities.Image":{"properties":{"attribution":{"example":"Tiffany Kosch, CC BY-NC-SA 4.0","type":"string"},"src":{"example":"https://inaturalist-open-data.s3.amazonaws.com/photos/340064435/medium.jpg","type":"string"}},"type":"object"},"handlers.CaptureSourceResult":{"description":"contains information about something that produces a video stream","properties":{"camera_hardware":{"description":"Short description of the camera hardware.","example":"pi cam v2 (wide angle lens)","type":"string"},"id":{"description":"Unique ID of the capture source.","example":1234567890,"type":"integer"},"location":{"description":"Where the rig or camera is located.","example":"-32.12345,139.12345","type":"string"},"name":{"description":"Name of rig or camera.","example":"Stony Point Cuttle Cam","type":"string"},"site_id":{"description":"Site ID is used to reference sites in OceanBench. Optional.","example":246813579,"type":"integer"}},"type":"object"},"handlers.CreateCaptureSourceBody":{"properties":{"camera_hardware":{"description":"Short description of the camera hardware.","example":"pi cam v2 (wide angle lens)","type":"string"},"location":{"description":"Location of the rig or camera.","example":"-32.12345,139.12345","type":"string"},"name":{"description":"Name of rig or camera.","example":"Stony Point Cuttle Cam","type":"string"},"site_id":{"description":"ID used to reference sites in OceanBench.","example":246813579,"type":"integer"}},"required":["camera_hardware","location","name"],"type":"object"},"handlers.CreateSelfBody":{"properties":{"display_name":{"example":"Coral Fischer","type":"string"}},"type":"object"},"handlers.CreateSpeciesBody":{"properties":{"common_name":{"description":"Common name (in English) of the species.","example":"Southern Reef Squid","type":"string"},"images":{"description":"Image or images of the species.","items":{"$ref":"#/components/schemas/entities.Image"},"type":"array","uniqueItems":false},"species":{"description":"Scientific name of the species.","example":"Sepioteuthis australis","type":"string"}},"type":"object"},"handlers.CreateVideoStreamBody":{"properties":{"annotator_list":{"description":"Users that are permitted to add annotations.","example":[1234567890],"items":{"type":"integer"},"type":"array","uniqueItems":false},"capturesource":{"description":"ID of the capture source that produced the stream.","example":1234567890,"type":"integer"},"endTime":{"description":"End time of stream.","example":"2023-05-25T16:30:00Z","type":"string"},"startTime":{"description":"Start time of stream.","example":"2023-05-25T08:00:00Z","type":"string"},"stream_url":{"description":"URL of video stream.","example":"https://www.youtube.com/watch?v=abcdefghijk","type":"string"}},"required":["capturesource","endTime","startTime","stream_url"],"type":"object"},"handlers.EntityIDResult":{"description":"ID of newly created entity.","properties":{"id":{"description":"Unique ID of the entity.","example":1234567890,"type":"integer"}},"type":"object"},"handlers.NewAnnotationBody":{"properties":{"identification":{"example":1234567890,"type":"integer"},"keypoints":{"items":{"$ref":"#/components/schemas/keypoint.KeyPoint"},"type":"array","uniqueItems":false},"videostream_id":{"example":1234567890,"type":"integer"}},"type":"object"},"handlers.SpeciesResult":{"properties":{"common_name":{"description":"Common name (in English) of the species.","example":"Southern Reef Squid","type":"string"},"id":{"description":"Unique ID of the species.","example":1234567890,"type":"integer"},"images":{"description":"Image or images of the species.","items":{"$ref":"#/components/schemas/entities.Image"},"type":"array","uniqueItems":false},"species":{"description":"Scientific name of the species.","example":"Sepioteuthis australis","type":"string"}},"type":"object"},"handlers.StartVideoStreamBody":{"properties":{"annotator_list":{"description":"Users that are permitted to add annotations.","example":[1234567890],"items":{"type":"integer"},"type":"array","uniqueItems":false},"capturesource":{"description":"ID of the capture source that produced the stream.","example":1234567890,"type":"integer"},"stream_url":{"description":"URL of live video stream.","example":"https://www.youtube.com/watch?v=abcdefghijk","type":"string"}},"required":["capturesource","stream_url"],"type":"object"},"handlers.UpdateCaptureSourceBody":{"properties":{"camera_hardware":{"description":"Short description of the camera hardware.","example":"pi cam v2 (wide angle lens)","type":"string"},"location":{"description":"Location of the rig or camera.","example":"-32.12345,139.12345","type":"string"},"name":{"description":"Name of rig or camera.","example":"Stony Point Cuttle Cam","type":"string"},"site_id":{"description":"ID used to reference sites in OceanBench.","example":246813579,"type":"integer"}},"type":"object"},"handlers.UpdateVideoStreamBody":{"properties":{"annotator_list":{"description":"Users that are permitted to add annotations.","example":[1234567890],"items":{"type":"integer"},"type":"array","uniqueItems":false},"capturesource":{"description":"ID of the capture source that produced the stream.","example":1234567890,"type":"integer"},"endTime":{"description":"End time of stream.","example":"2023-05-25T16:30:00Z","type":"string"},"startTime":{"description":"Start time of stream.","example":"2023-05-25T08:00:00Z","type":"string"},"stream_url":{"description":"URL of video stream.","example":"https://www.youtube.com/watch?v=abcdefghijk","type":"string"}},"type":"object"},"handlers.VideoStreamResult":{"properties":{"annotator_list":{"example":[1234567890],"items":{"type":"integer"},"type":"array","uniqueItems":false},"capturesource":{"example":1234567890,"type":"integer"},"endTime":{"example":"2023-05-25T16:30:00Z","type":"string"},"id":{"example":1234567890,"type":"integer"},"startTime":{"example":"2023-05-25T08:00:00Z","type":"string"},"stream_url":{"example":"https://www.youtube.com/watch?v=abcdefghijk","type":"string"}},"type":"object"},"keypoint.BoundingBox":{"properties":{"x1":{"example":10,"type":"integer"},"x2":{"example":50,"type":"integer"},"y1":{"example":25,"type":"integer"},"y2":{"example":75,"type":"integer"}},"type":"object"},"keypoint.KeyPoint":{"properties":{"box":{"$ref":"#/components/schemas/keypoint.BoundingBox"},"time":{"example":"01:56:05.500","type":"string"}},"type":"object"},"services.AnnotationWithJoins":{"properties":{"created_by":{"$ref":"#/components/schemas/services.PublicUser"},"id":{"example":1234567890,"type":"integer"},"identifications":{"items":{"$ref":"#/components/schemas/services.Identification"},"type":"array","uniqueItems":false},"keypoints":{"items":{"$ref":"#/components/schemas/keypoint.KeyPoint"},"type":"array","uniqueItems":false},"videostream":{"$ref":"#/components/schemas/services.VideoStreamSummary"}},"type":"object"},"services.Identification":{"properties":{"identified_by":{"items":{"$ref":"#/components/schemas/services.PublicUser"},"type":"array","uniqueItems":false},"species":{"$ref":"#/components/schemas/services.SpeciesSummary"}},"type":"object"},"services.PartialUserContents":{"properties":{"display_name":{"example":"Coral Fischer","type":"string"},"email":{"example":"coral.fischer@example.com","type":"string"},"role":{"enum":["readonly","annotator","curator","admin"],"example":"annotator","type":"string"}},"type":"object"},"services.PublicUser":{"properties":{"display_name":{"example":"Coral Fischer","type":"string"},"id":{"example":1234567890,"type":"integer"},"role":{"example":"annotator","type":"string"}},"type":"object"},"services.SpeciesSummary":{"properties":{"common_name":{"example":"Whale Shark","type":"string"},"id":{"example":1234567890,"type":"integer"},"scientific_name":{"example":"Rhincodon typus","type":"string"}},"type":"object"},"services.User":{"properties":{"display_name":{"example":"Coral Fischer","type":"string"},"email":{"example":"coral.fischer@example.com","type":"string"},"id":{"example":1234567890,"type":"integer"},"role":{"example":"annotator","type":"string"}},"type":"object"},"services.VideoStreamSummary":{"properties":{"id":{"example":1234567890,"type":"integer"},"stream_url":{"example":"https://www.youtube.com/watch?v=abcdefghijk","type":"string"}},"type":"object"}}},
    "info": {"contact":{"email":"scott@ausocean.org","name":"Scott Barnard"},"description":"OpenFish API","license":{"name":"BSD 3","url":"https://github.com/ausocean/openfish/blob/master/LICENSE"},"termsOfService":"http://swagger.io/terms/","title":"OpenFish API","version":"1.0"},
    "externalDocs": {"description":"","url":""},
    "paths": {"/api/v1/annotations":{"get":{"description":"Get paginated annotations, with options to filter by video stream.","parameters":[{"description":"Number of results to return.","in":"query","name":"limit","schema":{"default":20,"minimum":1,"type":"integer"}},{"description":"Number of results to skip.","in":"query","name":"offset","schema":{"minimum":0,"type":"integer"}},{"description":"Name to filter by.","in":"query","name":"name","schema":{"type":"string"}},{"description":"Video stream to filter by.","in":"query","name":"videostream","schema":{"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Result-services_AnnotationWithJoins"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Get annotations","tags":["Annotations"]},"post":{"description":"Roles required: \u003crole-tag\u003eAnnotator\u003c/role-tag\u003e, \u003crole-tag\u003eCurator\u003c/role-tag\u003e or \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nCreates a new annotation from provided JSON body.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.NewAnnotationBody"}}},"description":"New Annotation","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/services.AnnotationWithJoins"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Create annotation","tags":["Annotations"]}},"/api/v1/annotations/{id}":{"delete":{"description":"Roles required: \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nDelete an annotation by providing the annotation ID.","parameters":[{"description":"Annotation ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Delete annotation","tags":["Annotations"]},"get":{"description":"Gets an annotation when provided with an ID.","parameters":[{"description":"Annotation ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/services.AnnotationWithJoins"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get annotation by ID","tags":["Annotations"]}},"/api/v1/annotations/{id}/identifications/{species_id}":{"delete":{"description":"Roles required: \u003crole-tag\u003eAnnotator\u003c/role-tag\u003e, \u003crole-tag\u003eCurator\u003c/role-tag\u003e or \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nRemoves an identification from an annotation.","parameters":[{"description":"Annotation ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}},{"description":"Species ID","example":1234567890,"in":"path","name":"species","required":true,"schema":{"type":"integer"}}],"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/services.AnnotationWithJoins"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Remove Identification","tags":["Annotations"]},"post":{"description":"Roles required: \u003crole-tag\u003eAnnotator\u003c/role-tag\u003e, \u003crole-tag\u003eCurator\u003c/role-tag\u003e or \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nAdds a new identification to an existing annotation.","parameters":[{"description":"Annotation ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}},{"description":"Species ID","example":1234567890,"in":"path","name":"species","required":true,"schema":{"type":"integer"}}],"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/services.AnnotationWithJoins"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Add Identification","tags":["Annotations"]}},"/api/v1/auth/me":{"get":{"description":"Gets information about the current user.","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/services.User"}}},"description":"OK"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get current user","tags":["Authentication"]},"post":{"description":"Creates a new user.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.CreateSelfBody"}}},"description":"New User","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/services.User"}}},"description":"Created"}},"summary":"Create user","tags":["Authentication"]}},"/api/v1/capturesources":{"get":{"description":"Get paginated capture sources, with options to filter by name and location.","parameters":[{"description":"Number of results to return.","in":"query","name":"limit","schema":{"default":20,"minimum":1,"type":"integer"}},{"description":"Number of results to skip.","in":"query","name":"offset","schema":{"minimum":0,"type":"integer"}},{"description":"Name to filter by.","in":"query","name":"name","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Result-handlers_CaptureSourceResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Get capture sources","tags":["Capture Sources"]},"post":{"description":"Roles required: \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nCreates a new capture source from provided JSON body.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.CreateCaptureSourceBody"}}},"description":"New Capture Source","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.EntityIDResult"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Create capture source","tags":["Capture Sources"]}},"/api/v1/capturesources/{id}":{"delete":{"description":"Roles required: \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nDelete a capture source by providing the capture source ID.","parameters":[{"description":"Capture Source ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Delete capture source","tags":["Capture Sources"]},"get":{"description":"Gets a capture source when provided with an ID.","parameters":[{"description":"Capture Source ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.CaptureSourceResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get capture source by ID","tags":["Capture Sources"]},"patch":{"description":"Roles required: \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nPartially update a capture source by specifying the properties to update.","parameters":[{"description":"Capture Source ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.UpdateCaptureSourceBody"}}},"description":"Update Capture Source","required":true},"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Update capture source","tags":["Capture Sources"]}},"/api/v1/species":{"post":{"description":"Roles required: \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nCreates a new species from provided JSON body.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.CreateSpeciesBody"}}},"description":"New Species","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.EntityIDResult"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Create species","tags":["Species"]}},"/api/v1/species/{id}":{"delete":{"description":"Roles required: \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nDelete a species by providing the species ID.","parameters":[{"description":"Species ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Delete species","tags":["Species"]},"get":{"description":"Gets a species when provided with an ID.","parameters":[{"description":"Species ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.SpeciesResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get species by ID","tags":["Species"]}},"/api/v1/species:import-from-inaturalist":{"post":{"description":"Roles required: \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nImports all species that are descendants of a Phylum/Class/Order/etc from iNaturalist's taxa API.","parameters":[{"description":"Phylum/Class/Order/etc to import","example":"Infraorder Cetacea","in":"query","name":"descendants_of","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Import from iNaturalist","tags":["Species"]}},"/api/v1/tasks/{id}/status":{"get":{"description":"Checks if a task is completed, if so, it redirects to the task's resource, otherwise returns 200.","parameters":[{"description":"Task ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"301":{"description":"Moved Permanently"}},"summary":"Poll status","tags":["Tasks"]}},"/api/v1/users":{"get":{"description":"Gets paginated users. When invoked by an admin, the full user object is returned, otherwise the public user only.","parameters":[{"description":"Number of results to return.","in":"query","name":"limit","schema":{"default":20,"minimum":1,"type":"integer"}},{"description":"Number of results to skip.","in":"query","name":"offset","schema":{"minimum":0,"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Result-services_User"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Get users","tags":["Users"]}},"/api/v1/users/{id}":{"delete":{"description":"Roles required: \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nDelete a user by providing the user's ID.","parameters":[{"description":"ID","example":"1234567890","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Delete user","tags":["Users"]},"get":{"description":"Gets a user when provided with an ID. When invoked by an admin, the full user object is returned, otherwise the public user only. When the user is yourself, the full user object is returned regardless of your permissions.","parameters":[{"description":"ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/services.User"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get user by ID","tags":["Users"]},"patch":{"description":"Roles required: \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nUpdate a user's role.","parameters":[{"description":"ID","example":"1234567890","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/services.PartialUserContents"}}},"description":"Update User","required":true},"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Update role","tags":["Users"]}},"/api/v1/videostreams":{"get":{"description":"Get paginated video streams, with options to filter by timespan and capturesource.","parameters":[{"description":"Number of results to return.","in":"query","name":"limit","schema":{"default":20,"minimum":1,"type":"integer"}},{"description":"Number of results to skip.","in":"query","name":"offset","schema":{"minimum":0,"type":"integer"}},{"description":"Capture source ID to filter by.","in":"query","name":"capturesource","schema":{"type":"integer"}},{"description":"Start time to filter by.","in":"query","name":"timespan[start]","schema":{"type":"string"}},{"description":"End time to filter by.","in":"query","name":"timespan[end]","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Result-handlers_VideoStreamResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Get video streams","tags":["Video Streams"]},"post":{"description":"Roles required: \u003crole-tag\u003eCurator\u003c/role-tag\u003e or \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nRegisters a new video stream with OpenFish.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.CreateVideoStreamBody"}}},"description":"New Video Stream","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.EntityIDResult"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Register video stream","tags":["Video Streams"]}},"/api/v1/videostreams/live":{"post":{"description":"Roles required: \u003crole-tag\u003eCurator\u003c/role-tag\u003e or \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nRegisters a new live video stream with OpenFish. The API takes the current time as the start time of the video stream.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.StartVideoStreamBody"}}},"description":"New Video Stream","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.EntityIDResult"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Register live stream","tags":["Video Streams (Live)"]}},"/api/v1/videostreams/{id}":{"delete":{"description":"Roles required: \u003crole-tag\u003eCurator\u003c/role-tag\u003e or \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nDelete a video stream by providing the video stream ID.","parameters":[{"description":"Video Stream ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Delete video stream","tags":["Video Streams"]},"get":{"description":"Gets a video stream when provided with an ID.","parameters":[{"description":"Video Stream ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.VideoStreamResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get video stream by ID","tags":["Video Streams"]},"patch":{"description":"Roles required: \u003crole-tag\u003eCurator\u003c/role-tag\u003e or \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nPartially update a video stream by specifying the properties to update.","parameters":[{"description":"Video Stream ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.UpdateVideoStreamBody"}}},"description":"Update Video Stream","required":true},"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Update video stream","tags":["Video Streams"]}},"/api/v1/videostreams/{id}/live":{"patch":{"description":"Roles required: \u003crole-tag\u003eCurator\u003c/role-tag\u003e or \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nNotify OpenFish that a live video stream has finished. The API takes the current time as the end time.","parameters":[{"description":"Video Stream ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Finish live stream","tags":["Video Streams (Live)"]}},"/api/v1/videostreams/{id}/media/{type}/{subtype}":{"delete":{"description":"Roles required: \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nDeletes the cached image or video snippet from this video stream at the given time.","parameters":[{"description":"Video Stream ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}},{"description":"Type","example":"image","in":"path","name":"type","required":true,"schema":{"type":"string"}},{"description":"Subtype","example":"jpeg","in":"path","name":"subtype","required":true,"schema":{"type":"string"}},{"description":"Time","example":"00:00:01.000-00:00:05.500","in":"query","name":"time","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Delete video stream media","tags":["Media"]},"get":{"description":"Roles required: \u003crole-tag\u003eAdmin\u003c/role-tag\u003e\n\nGets the image or video snippet from this video stream at the given time.","parameters":[{"description":"Video Stream ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}},{"description":"Type","example":"image","in":"path","name":"type","required":true,"schema":{"type":"string"}},{"description":"Subtype","example":"jpeg","in":"path","name":"subtype","required":true,"schema":{"type":"string"}},{"description":"Time","example":"00:00:01.000-00:00:05.500","in":"query","name":"time","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get video stream media","tags":["Media"]}}},
    "openapi": "3.1.0",
    "tags": [
        {"description":"OpenFish provides APIs to create, retrieve, update (under development) and delete (under development) annotations, and features to query annotations by the person who made the observation, what kind of observations were made (presence of a key), what was observed (presence of a key and given value), and by the location (under development), video stream or capture source (under development).","name":"Annotations"},
        {"description":"Capture sources are cameras that produces video streams. AusOcean may have one or many capture sources at a rig or jetty,  depending on how many cameras are set up.","name":"Capture Sources"},
        {"description":"The video stream API provides the metadata for video streams. A video stream has a start time, end time, stream URL and linked capture source. Using the video stream API we can register our video streams with OpenFish so it can annotate and play back that stream. The stream URL specifies where the video data is stored. Examples: http://vidgrind.ausocean.org/get?id=1, https://www.youtube.com/watch?v=abcdefghijk","name":"Video Streams"},
        {"description":"Live streams are different to registering an existing video. This is because we don't know the end time when we start it. To register a stream when it starts use POST. It takes the current time as the start time. To finish a stream use PATCH. It uses the current time as the end time. See also: Video Streams","name":"Video Streams (Live)"},
        {"description":"Species are used for providing suggestions to our users when annotating videos. They have the scientific and common name, and an images or images. Images have a source and attribution - we use this to give the author credit and to abide by the rules of the license.","name":"Species"},
        {"description":"A user is identified by their email and has a role that gives them permissions. A user is created when they first login to OpenFish. There are APIs for updating user's role, listing users and deleting a user account.","name":"Users"},
        {"description":"Operations related to user authentication \u0026 authorization.","name":"Authentication"},
        {"description":"Some operations are long-running and execute asynchronously. These APIs return immediately with a task ID. You track task progress by polling the task API endpoint.","name":"Tasks"},
        {"description":"Media is video or images that can be downloaded to be used as training data from annotated video streams.","name":"Media"},
        {"description":"OpenFish provides APIs to create, retrieve, update (under development) and delete (under development) annotations, and features to query annotations by the person who made the observation, what kind of observations were made (presence of a key), what was observed (presence of a key and given value), and by the location (under development), video stream or capture source (under development).","name":"Annotations"},
        {"description":"Capture sources are cameras that produces video streams. AusOcean may have one or many capture sources at a rig or jetty,  depending on how many cameras are set up.","name":"Capture Sources"},
        {"description":"The video stream API provides the metadata for video streams. A video stream has a start time, end time, stream URL and linked capture source. Using the video stream API we can register our video streams with OpenFish so it can annotate and play back that stream. The stream URL specifies where the video data is stored. Examples: http://vidgrind.ausocean.org/get?id=1, https://www.youtube.com/watch?v=abcdefghijk","name":"Video Streams"},
        {"description":"Live streams are different to registering an existing video. This is because we don't know the end time when we start it. To register a stream when it starts use POST. It takes the current time as the start time. To finish a stream use PATCH. It uses the current time as the end time. See also: Video Streams","name":"Video Streams (Live)"},
        {"description":"Species are used for providing suggestions to our users when annotating videos. They have the scientific and common name, and an images or images. Images have a source and attribution - we use this to give the author credit and to abide by the rules of the license.","name":"Species"},
        {"description":"A user is identified by their email and has a role that gives them permissions. A user is created when they first login to OpenFish. There are APIs for updating user's role, listing users and deleting a user account.","name":"Users"},
        {"description":"Operations related to user authentication \u0026 authorization.","name":"Authentication"},
        {"description":"Some operations are long-running and execute asynchronously. These APIs return immediately with a task ID. You track task progress by polling the task API endpoint.","name":"Tasks"}
    ],
    "servers": [
        {"url":"https://openfish.appspot.com"}
    ]
}