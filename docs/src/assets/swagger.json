{
    "components": {"schemas":{"api.Failure":{"properties":{"message":{"example":"error message here","type":"string"}},"type":"object"},"api.Result-handlers_AnnotationResult":{"properties":{"limit":{"example":20,"type":"integer"},"offset":{"example":0,"type":"integer"},"results":{"items":{"$ref":"#/components/schemas/handlers.AnnotationResult"},"type":"array","uniqueItems":false},"total":{"example":1,"type":"integer"}},"type":"object"},"api.Result-handlers_CaptureSourceResult":{"properties":{"limit":{"example":20,"type":"integer"},"offset":{"example":0,"type":"integer"},"results":{"items":{"$ref":"#/components/schemas/handlers.CaptureSourceResult"},"type":"array","uniqueItems":false},"total":{"example":1,"type":"integer"}},"type":"object"},"api.Result-handlers_UserResult":{"properties":{"limit":{"example":20,"type":"integer"},"offset":{"example":0,"type":"integer"},"results":{"items":{"$ref":"#/components/schemas/handlers.UserResult"},"type":"array","uniqueItems":false},"total":{"example":1,"type":"integer"}},"type":"object"},"api.Result-handlers_VideoStreamResult":{"properties":{"limit":{"example":20,"type":"integer"},"offset":{"example":0,"type":"integer"},"results":{"items":{"$ref":"#/components/schemas/handlers.VideoStreamResult"},"type":"array","uniqueItems":false},"total":{"example":1,"type":"integer"}},"type":"object"},"entities.Image":{"properties":{"attribution":{"example":"Tiffany Kosch, CC BY-NC-SA 4.0","type":"string"},"src":{"example":"https://inaturalist-open-data.s3.amazonaws.com/photos/340064435/medium.jpg","type":"string"}},"type":"object"},"handlers.AnnotationResult":{"properties":{"id":{"example":1234567890,"type":"integer"},"keypoints":{"items":{"$ref":"#/components/schemas/keypoint.KeyPoint"},"type":"array","uniqueItems":false},"observation":{"additionalProperties":{"type":"string"},"example":{"common_name":"Zebrafish","species":"Girella Zebra"},"type":"object"},"observer":{"example":"user@example.com","type":"string"},"videostreamId":{"example":1234567890,"type":"integer"}},"type":"object"},"handlers.CaptureSourceResult":{"description":"contains information about something that produces a video stream","properties":{"camera_hardware":{"description":"Short description of the camera hardware.","example":"pi cam v2 (wide angle lens)","type":"string"},"id":{"description":"Unique ID of the capture source.","example":1234567890,"type":"integer"},"location":{"description":"Where the rig or camera is located.","example":"-32.12345,139.12345","type":"string"},"name":{"description":"Name of rig or camera.","example":"Stony Point Cuttle Cam","type":"string"},"site_id":{"description":"Site ID is used to reference sites in OceanBench. Optional.","example":246813579,"type":"integer"}},"type":"object"},"handlers.CreateAnnotationBody":{"properties":{"keypoints":{"items":{"$ref":"#/components/schemas/keypoint.KeyPoint"},"type":"array","uniqueItems":false},"observation":{"additionalProperties":{"type":"string"},"example":{"common_name":"Zebrafish","species":"Girella Zebra"},"type":"object"},"videostreamId":{"example":1234567890,"type":"integer"}},"required":["keypoints","observation","videostreamId"],"type":"object"},"handlers.CreateCaptureSourceBody":{"properties":{"camera_hardware":{"description":"Short description of the camera hardware.","example":"pi cam v2 (wide angle lens)","type":"string"},"location":{"description":"Location of the rig or camera.","example":"-32.12345,139.12345","type":"string"},"name":{"description":"Name of rig or camera.","example":"Stony Point Cuttle Cam","type":"string"},"site_id":{"description":"ID used to reference sites in OceanBench.","example":246813579,"type":"integer"}},"required":["camera_hardware","location","name"],"type":"object"},"handlers.CreateSpeciesBody":{"properties":{"common_name":{"description":"Common name (in English) of the species.","example":"Southern Reef Squid","type":"string"},"images":{"description":"Image or images of the species.","items":{"$ref":"#/components/schemas/entities.Image"},"type":"array","uniqueItems":false},"species":{"description":"Scientific name of the species.","example":"Sepioteuthis australis","type":"string"}},"type":"object"},"handlers.CreateVideoStreamBody":{"properties":{"annotator_list":{"description":"Users that are permitted to add annotations.","example":["user@example.com"],"items":{"type":"string"},"type":"array","uniqueItems":false},"capturesource":{"description":"ID of the capture source that produced the stream.","example":1234567890,"type":"integer"},"endTime":{"description":"End time of stream.","example":"2023-05-25T16:30:00Z","type":"string"},"startTime":{"description":"Start time of stream.","example":"2023-05-25T08:00:00Z","type":"string"},"stream_url":{"description":"URL of video stream.","example":"https://www.youtube.com/watch?v=abcdefghijk","type":"string"}},"required":["capturesource","endTime","startTime","stream_url"],"type":"object"},"handlers.EntityIDResult":{"description":"ID of newly created entity.","properties":{"id":{"description":"Unique ID of the entity.","example":1234567890,"type":"integer"}},"type":"object"},"handlers.SpeciesResult":{"properties":{"common_name":{"description":"Common name (in English) of the species.","example":"Southern Reef Squid","type":"string"},"id":{"description":"Unique ID of the species.","example":1234567890,"type":"integer"},"images":{"description":"Image or images of the species.","items":{"$ref":"#/components/schemas/entities.Image"},"type":"array","uniqueItems":false},"species":{"description":"Scientific name of the species.","example":"Sepioteuthis australis","type":"string"}},"type":"object"},"handlers.StartVideoStreamBody":{"properties":{"annotator_list":{"description":"Users that are permitted to add annotations.","example":["user@example.com"],"items":{"type":"string"},"type":"array","uniqueItems":false},"capturesource":{"description":"ID of the capture source that produced the stream.","example":1234567890,"type":"integer"},"stream_url":{"description":"URL of live video stream.","example":"https://www.youtube.com/watch?v=abcdefghijk","type":"string"}},"required":["capturesource","stream_url"],"type":"object"},"handlers.UpdateCaptureSourceBody":{"properties":{"camera_hardware":{"description":"Short description of the camera hardware.","example":"pi cam v2 (wide angle lens)","type":"string"},"location":{"description":"Location of the rig or camera.","example":"-32.12345,139.12345","type":"string"},"name":{"description":"Name of rig or camera.","example":"Stony Point Cuttle Cam","type":"string"},"site_id":{"description":"ID used to reference sites in OceanBench.","example":246813579,"type":"integer"}},"type":"object"},"handlers.UpdateUserBody":{"properties":{"role":{"description":"User role.","enum":["readonly","annotator","curator","admin"],"example":"annotator","type":"string"}},"required":["role"],"type":"object"},"handlers.UpdateVideoStreamBody":{"properties":{"annotator_list":{"description":"Users that are permitted to add annotations.","example":["user@example.com"],"items":{"type":"string"},"type":"array","uniqueItems":false},"capturesource":{"description":"ID of the capture source that produced the stream.","example":1234567890,"type":"integer"},"endTime":{"description":"End time of stream.","example":"2023-05-25T16:30:00Z","type":"string"},"startTime":{"description":"Start time of stream.","example":"2023-05-25T08:00:00Z","type":"string"},"stream_url":{"description":"URL of video stream.","example":"https://www.youtube.com/watch?v=abcdefghijk","type":"string"}},"type":"object"},"handlers.UserResult":{"properties":{"email":{"example":"user@example.com","type":"string"},"role":{"example":"annotator","type":"string"}},"type":"object"},"handlers.VideoStreamResult":{"properties":{"annotator_list":{"example":["user@example.com"],"items":{"type":"string"},"type":"array","uniqueItems":false},"capturesource":{"example":1234567890,"type":"integer"},"endTime":{"example":"2023-05-25T16:30:00Z","type":"string"},"id":{"example":1234567890,"type":"integer"},"startTime":{"example":"2023-05-25T08:00:00Z","type":"string"},"stream_url":{"example":"https://www.youtube.com/watch?v=abcdefghijk","type":"string"}},"type":"object"},"keypoint.BoundingBox":{"properties":{"x1":{"example":10,"type":"integer"},"x2":{"example":50,"type":"integer"},"y1":{"example":25,"type":"integer"},"y2":{"example":75,"type":"integer"}},"type":"object"},"keypoint.KeyPoint":{"properties":{"box":{"$ref":"#/components/schemas/keypoint.BoundingBox"},"time":{"example":"01:56:05.500","type":"string"}},"type":"object"}}},
    "info": {"contact":{"email":"scott@ausocean.org","name":"Scott Barnard"},"description":"OpenFish provides an API to access stored marine footage, and video annotations / labels, allowing clients to retrieve and filter the data.\n\nClients can download segments of footage or video annotations by querying\nby location, time, and other parameters.\n\n## Authentication\nOpenFish has optional support for requiring user authentication.\n\nUser authentication is provided using Google Cloud's Identity Aware Proxy (IAP). By default it is disabled, to use it you need to pass the command line flag `--iap` or set the environmental variable `IAP=\\\"true\\\"` to enable it.\n\n## Roles and permissions\nIf user authentication is enabled, the following roles and permissions apply:\n\n| Role               | Permissions                                                                       |\n| ------------------ | --------------------------------------------------------------------------------- |\n| Admin              | Can add and remove annotations, videostreams, capturesources, users, and species. |\n| Curator            | Can select streams for classification.                                            |\n| Annotator          | Can add annotations, and delete their own annotations                             |\n| Readonly (default) | A readonly user is only be able to look at annotations, not make any              |\n","license":{"name":"BSD 3","url":"https://github.com/ausocean/openfish/blob/master/LICENSE"},"termsOfService":"http://swagger.io/terms/","title":"OpenFish API","version":"1.0"},
    "externalDocs": {"description":"","url":""},
    "paths": {"/api/v1/annotations":{"get":{"description":"Get paginated annotations, with options to filter by video stream, capture source, observer and observation.","parameters":[{"description":"Number of results to return.","in":"query","name":"limit","schema":{"default":20,"minimum":1,"type":"integer"}},{"description":"Number of results to skip.","in":"query","name":"offset","schema":{"minimum":0,"type":"integer"}},{"description":"Name to filter by.","in":"query","name":"name","schema":{"type":"string"}},{"description":"Video stream to filter by.","in":"query","name":"videostream","schema":{"type":"integer"}},{"description":"Capture source to filter by.","in":"query","name":"capturesource","schema":{"type":"integer"}},{"description":"Observer to filter by.","in":"query","name":"observer","schema":{"type":"string"}},{"description":"Observation key/value to filter by. Use * to filter on presence of the key only.","in":"query","name":"observation[\u003ckey\u003e]","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Result-handlers_AnnotationResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Get annotations","tags":["Annotations"]},"post":{"description":"Creates a new annotation from provided JSON body. Annotator role required.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.CreateAnnotationBody"}}},"description":"New Annotation","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.EntityIDResult"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Create annotation","tags":["Annotations"]}},"/api/v1/annotations/{id}":{"delete":{"description":"Delete an annotation by providing the annotation ID. [Admin]","parameters":[{"description":"Annotation ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Delete annotation","tags":["Annotations"]},"get":{"description":"Gets an annotation when provided with an ID.","parameters":[{"description":"Annotation ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.AnnotationResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get annotation by ID","tags":["Annotations"]}},"/api/v1/auth/me":{"get":{"description":"Gets information about the current user.","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.UserResult"}}},"description":"OK"}},"summary":"Get current user","tags":["Authentication"]}},"/api/v1/capturesources":{"get":{"description":"Get paginated capture sources, with options to filter by name and location.","parameters":[{"description":"Number of results to return.","in":"query","name":"limit","schema":{"default":20,"minimum":1,"type":"integer"}},{"description":"Number of results to skip.","in":"query","name":"offset","schema":{"minimum":0,"type":"integer"}},{"description":"Name to filter by.","in":"query","name":"name","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Result-handlers_CaptureSourceResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Get capture sources","tags":["Capture Sources"]},"post":{"description":"Admin role required`**\n\nCreates a new capture source from provided JSON body.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.CreateCaptureSourceBody"}}},"description":"New Capture Source","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.EntityIDResult"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Create capture source","tags":["Capture Sources"]}},"/api/v1/capturesources/{id}":{"delete":{"description":"**`Admin role required`**\n\nDelete a capture source by providing the capture source ID.","parameters":[{"description":"Capture Source ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"security":[{"IAP":[]}],"summary":"Delete capture source","tags":["Capture Sources"]},"get":{"description":"Gets a capture source when provided with an ID.","parameters":[{"description":"Capture Source ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.CaptureSourceResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get capture source by ID","tags":["Capture Sources"]},"patch":{"description":"Admin role required`**\n\nPartially update a capture source by specifying the properties to update.","parameters":[{"description":"Capture Source ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.UpdateCaptureSourceBody"}}},"description":"Update Capture Source","required":true},"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Update capture source","tags":["Capture Sources"]}},"/api/v1/species":{"post":{"description":"Admin role required`**\n\nCreates a new species from provided JSON body.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.CreateSpeciesBody"}}},"description":"New Species","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.EntityIDResult"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Create species","tags":["Species"]}},"/api/v1/species/{id}":{"delete":{"description":"Admin role required`**\n\nDelete a species by providing the species ID.","parameters":[{"description":"Species ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Delete species","tags":["Species"]},"get":{"description":"Gets a species when provided with an ID.","parameters":[{"description":"Species ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.SpeciesResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get species by ID","tags":["Species"]}},"/api/v1/species:import-from-inaturalist":{"post":{"description":"Admin role required`**\n\nImports all species that are descendants of a Phylum/Class/Order/etc from iNaturalist's taxa API.","parameters":[{"description":"Phylum/Class/Order/etc to import","example":"Infraorder Cetacea","in":"query","name":"descendants_of","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Import from iNaturalist","tags":["Species"]}},"/api/v1/tasks/{id}/status":{"get":{"description":"Checks if a task is completed, if so, it redirects to the task's resource, otherwise returns 200.","parameters":[{"description":"Task ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"301":{"description":"Moved Permanently"}},"summary":"Poll status","tags":["Tasks"]}},"/api/v1/users":{"get":{"description":"Admin role required`**\n\nGet paginated users.","parameters":[{"description":"Number of results to return.","in":"query","name":"limit","schema":{"default":20,"minimum":1,"type":"integer"}},{"description":"Number of results to skip.","in":"query","name":"offset","schema":{"minimum":0,"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Result-handlers_UserResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Get users","tags":["Users"]}},"/api/v1/users/{email}":{"delete":{"description":"Admin role required`**\n\nDelete a user by providing the user's email.","parameters":[{"description":"Email","example":"user@example.com","in":"path","name":"email","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Delete user","tags":["Users"]},"get":{"description":"Admin role required`**\n\nGets a user when provided with an email.","parameters":[{"description":"Email","example":"user@example.com","in":"path","name":"email","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.UserResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get user by email","tags":["Users"]},"patch":{"description":"Admin role required`**\n\nUpdate a user's role.","parameters":[{"description":"Email","example":"user@example.com","in":"path","name":"email","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.UpdateUserBody"}}},"description":"Update User","required":true},"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Update role","tags":["Users"]}},"/api/v1/videostreams":{"get":{"description":"Get paginated video streams, with options to filter by timespan and capturesource.","parameters":[{"description":"Number of results to return.","in":"query","name":"limit","schema":{"default":20,"minimum":1,"type":"integer"}},{"description":"Number of results to skip.","in":"query","name":"offset","schema":{"minimum":0,"type":"integer"}},{"description":"Capture source ID to filter by.","in":"query","name":"capturesource","schema":{"type":"integer"}},{"description":"Start time to filter by.","in":"query","name":"timespan[start]","schema":{"type":"string"}},{"description":"End time to filter by.","in":"query","name":"timespan[end]","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Result-handlers_VideoStreamResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Get video streams","tags":["Video Streams"]},"post":{"description":"Curator or Admin role required`**\n\nRegisters a new video stream with OpenFish.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.CreateVideoStreamBody"}}},"description":"New Video Stream","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.EntityIDResult"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Register video stream","tags":["Video Streams"]}},"/api/v1/videostreams/live":{"post":{"description":"Curator or Admin role required`**\n\nRegisters a new live video stream with OpenFish. The API takes the current time as the start time of the video stream.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.StartVideoStreamBody"}}},"description":"New Video Stream","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.EntityIDResult"}}},"description":"Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Register live stream","tags":["Video Streams (Live)"]}},"/api/v1/videostreams/{id}":{"delete":{"description":"Curator or Admin role required`**\n\nDelete a video stream by providing the video stream ID.","parameters":[{"description":"Video Stream ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Delete video stream","tags":["Video Streams"]},"get":{"description":"Gets a video stream when provided with an ID.","parameters":[{"description":"Video Stream ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.VideoStreamResult"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Not Found"}},"summary":"Get video stream by ID","tags":["Video Streams"]},"patch":{"description":"Curator or Admin role required`**\n\nPartially update a video stream by specifying the properties to update.","parameters":[{"description":"Video Stream ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/handlers.UpdateVideoStreamBody"}}},"description":"Update Video Stream","required":true},"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Update video stream","tags":["Video Streams"]}},"/api/v1/videostreams/{id}/live":{"patch":{"description":"Curator or Admin role required`**\n\nNotify OpenFish that a live video stream has finished. The API takes the current time as the end time.","parameters":[{"description":"Video Stream ID","example":1234567890,"in":"path","name":"id","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/api.Failure"}}},"description":"Bad Request"}},"summary":"Finish live stream","tags":["Video Streams (Live)"]}}},
    "openapi": "3.1.0",
    "tags": [
        {"description":"OpenFish provides APIs to create, retrieve, update (under development) and delete (under development) annotations, and features to query annotations by the person who made the observation, what kind of observations were made (presence of a key), what was observed (presence of a key and given value), and by the location (under development), video stream or capture source (under development).","name":"Annotations"},
        {"description":"Capture sources are cameras that produces video streams. AusOcean may have one or many capture sources at a rig or jetty,  depending on how many cameras are set up.","name":"Capture Sources"},
        {"description":"The video stream API provides the metadata for video streams. A video stream has a start time, end time, stream URL and linked capture source. Using the video stream API we can register our video streams with OpenFish so it can annotate and play back that stream. The stream URL specifies where the video data is stored. Examples: http://vidgrind.ausocean.org/get?id=1, https://www.youtube.com/watch?v=abcdefghijk","name":"Video Streams"},
        {"description":"Live streams are different to registering an existing video. This is because we don't know the end time when we start it. To register a stream when it starts use POST. It takes the current time as the start time. To finish a stream use PATCH. It uses the current time as the end time. See also: Video Streams","name":"Video Streams (Live)"},
        {"description":"Species are used for providing suggestions to our users when annotating videos. They have the scientific and common name, and an images or images. Images have a source and attribution - we use this to give the author credit and to abide by the rules of the license.","name":"Species"},
        {"description":"A user is identified by their email and has a role that gives them permissions. A user is created when they first login to OpenFish. There are APIs for updating user's role, listing users and deleting a user account.","name":"Users"},
        {"description":"Operations related to user authentication \u0026 authorization.","name":"Authentication"},
        {"description":"Some operations are long-running and execute asynchronously. These APIs return immediately with a task ID. You track task progress by polling the task API endpoint.","name":"Tasks"}
    ],
    "servers": [
        {"url":"https://openfish.appspot.com"}
    ]
}